name: GitHub Context Example

on:
#  手动触发
#  workflow_dispatch
  workflow_dispatch:
    inputs:
      build_id:
        required: true
        type: number
      deploy_target:
        required: true
        type: string
      perform_deploy:
        required: true
        type: boolean

env:
  GLOBAL_VAR: "This is a global variable"
# https://docs.github.com/en/enterprise-cloud@latest/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
jobs:
  show-github-context:
    runs-on: ubuntu-latest
    steps:
#     https://docs.github.com/en/enterprise-cloud@latest/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#default-environment-variables
      - name: "Show GitHub Context"
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"

  show-env-context:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: "Job level variable"
    steps:
      - name: "env context"
        env:
          STEP_VAR: "Step level variable"
        run: |
          echo "Global Variable: ${{ env.GLOBAL_VAR }}"
          echo "Job Variable: ${{ env.JOB_VAR }}"
          echo "Step Variable: ${{ env.STEP_VAR }}"

  show-steps-context:
    runs-on: ubuntu-latest
#    steps 上下文
#    steps 上下文用于在同一个 job 中获取先前步骤的输出。每个步骤需要设置 id 才能通过 steps.<step_id>.outputs.<output_name> 访问输出。
#    steps.example_step.outputs.message：访问 example_step 步骤的输出。
    steps:
      - name: Set output in step
        id: example_step
        run: echo "message=Hello from previous step" >> $GITHUB_OUTPUT

      - name: Use step output
        run: |
          echo "Message: ${{ steps.example_step.outputs.message }}"

# ${{ secrets.MY_SECRET }}：访问仓库的 MY_SECRET Secret，GitHub 会自动保护此值不被泄露。
  show-secret-context:
    runs-on: ubuntu-latest
    steps:
      - name: "Show Secret Context"
        run: |
          echo "Secret: ${{ secrets.PAT }}"

  show-runner-context:
    runs-on: ubuntu-latest
    steps:
      - name: Show OS
        run: | 
          echo "Operating system: ${{ runner.os }}"

      - name: Show Temp Directory
        run: |
          echo "Temp directory: ${{ runner.temp }}"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Run build
        run: echo "Building project..."

# https://docs:github:com/en/enterprise-cloud@latest/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#jobs-context:
  test:
    runs-on: ubuntu-latest
    needs: build
#    needs.build.result：获取 build job 的状态，如果 build 成功，才会执行 test job。
#    The result of a job in the reusable workflow. Possible values are success, failure, cancelled, or skipped.
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Run tests
        run: echo "Running tests..."
  deploy:
    runs-on: ubuntu-latest
    if: ${{ inputs.perform_deploy }}
    steps:
      - name: Deploy build to target
        run: echo "Deploying build:${{ inputs.build_id }} to target:${{ inputs.deploy_target }}"

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"