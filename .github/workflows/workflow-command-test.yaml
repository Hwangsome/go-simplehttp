name: Conditional Workflow

on: [push]

jobs:
  check-message:
    runs-on: ubuntu-latest
#    使用 outputs 将 build_type 设置为整个 job 的输出。这行代码的作用是将步骤 check_message 的 build_type 输出暴露为 check-message job 的输出：
    outputs:
        build_type: ${{ steps.check_message.outputs.build_type }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check commit message
        id: check_message  # 确保 id 为 check_message
        #          输出 commit 消息以进行调试
#        #          检查提交消息：通过 git log 获取提交消息，判断其中是否包含 [full-build]。
        run: |
          message=$(git log -1 --pretty=%B)
          echo "Commit message: $message"  
          if [[ "$message" == *"[full-build]"* ]]; then
            echo "build_type=full" >> $GITHUB_OUTPUT
          else
            echo "build_type=quick" >> $GITHUB_OUTPUT
          fi
      - name: Display build_type output
        run: echo "Build type is ${{ steps.check_message.outputs.build_type }}"

  build:
    needs: check-message
    runs-on: ubuntu-latest
    steps:
      - name: GITHUB_OUTPUT value
        run: echo "GITHUB_OUTPUT= ${{ needs.check-message.outputs.build_type }} " # 输出 GITHUB_OUTPUT 的值以进行调试

#       跨 job 引用：在 build job 中，通过 needs.check-message.outputs.build_type 正确引用 build_type 的值：
#       条件运行步骤：在 build Job 中，根据 build_type 的值决定运行“完整构建”还是“快速构建”。
#               设置输出变量：根据判断结果设置 build_type 的值为 full 或 quick。
#              基本语法： echo "::set-output name=<output_name>::<value>"
#               name：指定输出变量的名称，可以在后续步骤中通过 ${{ steps.<step_id>.outputs.<output_name> }} 引用。
#               value：要传递的值，可以是字符串、数值或其他需要传递的数据。
      - name: Run full build
        if: ${{ needs.check-message.outputs.build_type == 'full' }}
        run: echo "Running full build..."

      - name: Run quick build
        if: ${{ needs.check-message.outputs.build_type == 'quick' }}
        run: echo "Running quick build..."
